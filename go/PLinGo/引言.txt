Go,精小而高效的语言。
底层：指针。
高级：Unicdoe字符串、内置数据类型、鸭子类型、垃圾收集、高层次并发支持、使用通信而非共享数据、标准库。

可高效地伸缩以便构建非常大的应用，且非常快速地编译。（1、语法容易解析；2、依赖管理）

高效地构建，所以可以用于脚本语言的场景，还可以构建GAE的Web应用程序。

语法非常干净且易于理解，是强静态类型的语言。

Go对内存管理，指针分配的跟踪有很好的支持。内存管理，有一个垃圾收集器，无需使用智能指针或手动释放内存。
Go语言的并发机制基于C.A.R.Hoare提出的CSP（Communicating Sequential Processes）模型构建，意味着许多并发的Go语言程序不需要加任何锁。
Go语言引入goroutine，一种非常轻量级的进程，可一次性大量创建，并可跨处理器和处理器核心自动进行负载平衡，以提供比老的基于线程的语言更细粒度的并发。

Go语言更关注语言效率以及为程序员带来的便捷性。
内置类型可高度优化，用户自定义类型不能
两个基本内置集合类型：切片（slice），映射（map）
支持指针，可轻松创建复杂的自定义类型，如平衡二叉树。

Go可以用做纯粹的过程式编程语言，但对面向对象编程也支持得很好。

Go不支持泛型（C++中的模板），不使用预处理器或者包含文件(所以编译很快)

Go语言最初被构思为一门可充分利用分布式系统以及多核联网计算机优势且适用于开发大型项目的编译速度很快的系统级语言。现在他正被用作一个具有高度生产里的通用编程语言。
